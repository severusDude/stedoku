To hide a secret message the proposed method considers a secret data and a publicly available text file as input to the system. The method converts the secret text to its equivalent ASCII format A and the cover text is converted to equivalent sentence matrix S of size N x N, where N is the number of words in the longest sentence of the chosen text. Each node of the generated sentence matrix S contains the information about the corresponding sentence number, word number and the position number of the member ASCII character. Then by comparing the ASCII value of corresponding secret text with the sentence matrix entries, a Sudoku puzzle is generated. The unchanged cover text file and the generated Sudoku puzzle are sent to the intended recipient. For generation of the Sudoku puzzle sentence number of the cover text is matched with mini grid number, corresponding word number of the sentence is matched with node position in the mini grid and the entered value is according to the position of the corresponding ASCII code in that word. N is the length of the longest sentence of the text. For simplicity of implementation a 9  9 Sudoku puzzle is generated and hence forth first 9 words of each sentence is taken into account. The words of length more than 9 are also kept out of consideration.

Encoding Algorithm

Input:
1. Secret Text
2. Any publicly available text files as cover text

Steps:
1. Convert the secret data to equivalent ASCII format A.
2. Convert the cover text to equivalent sentence matrix S of size N x N where N is the number of words in the longest sentence of the cover text.
3. Convert the cover text to equivalent matrix in ASCII format R too as a reference of comparison.
4. Compare R with A in the following method to generate the Sudoku puzzle to be sent to the receiver as a key.
5.
(a) Start finding the corresponding match for first ASCII value entry of the secret data in matrix R and if a match is found, then the position of the match in the word is stored in the same mini grid number in S that matches with the sentence number.
(b) Look for the next match with the next ASCII code in the secret text accordingly.
(c) If no match is found in a sentence, skip the sentence and the corresponding mini grid and move to the next set.
(d) If all the mini grids of the sentence matrix S are exhausted before exhaustion of the secret text of ASCII chain A, start second entry in the mini grid following the same method and for the second entries a new shade is used as a base of the new entries.
(e) The process is carried on until the secret text ASCII chain A is exhausted fully.
6. The newly generated matrix S is the generated Sudoku puzzle i.e. stego key to be sent to the receiver end along with the chosen cover text.

Output:
1. Stego Key i.e the generated N x N Sudoku puzzle.

Reversely to extract the secret text at the receiver end, first the reference matrix R, containing the corresponding ASCII entries of the characters of the cover text is generated and the received Sudoku puzzle is checked and the entries in the mini grids are taken to pick the ASCII values from R accordingly. After the ASCII chain is generated, it’s again converted to the alphanumeric form to regenerate the secret text at the receiver end.

Decoding Algorithm

Input:
1. Stego Key, Sudoku Puzzle, S
2. The cover text used in encoding

Steps:
1. Convert the cover text to reference matrix R by converting it to the ASCII format.
2. The entries in the Sudoku puzzle are checked in the following procedure to generate the hidden secret text from the cover text.
3.
(a) Check the first entry in the first mini grid of the puzzle S.
(b) The position that matches with that entry is in the first sentence in the word whose position number matches with the cell number of the mini grid.
(c) The value of the corresponding cell shows the position of the specific ASCII character in the word that is obtained in step (b).
(d) Move to the next entry in the puzzle S.
4. All the entries are handled accordingly following the steps in 3 and an ASCII chain is generated.
5. Now the ASCII chain is converted to alphanumeric form to generate the secret text, send by sender to the intended recipient

Output:
1. Secret Text

Secret Text
Short hair

Cover Text
Having one’s own house is a great blessing of God. One feels good, safe and secure at his home. A house, you know is an important necessity. The quality of life improves when you have a comfortable house of your own. It gives you an opportunity to turn some of your dreams into reality. You decorate your room as per your taste. You look after your garden with trees of fruits.

{"board":[[8,0,0,0,4,0,5,0,0],[0,3,0,0,0,0,0,1,0],[2,0,6,0,0,0,0,0,0],[0,0,0,8,0,0,0,0,2],[1,0,0,0,0,9,0,0,0],[0,0,0,4,0,0,0,0,0],[0,0,0,0,0,7,1,0,0],[0,2,0,0,0,0,0,0,6],[0,0,3,5,0,0,0,0,0]],"prefilled":[[false,false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false,false],[false,false,false,false,false,false,false,false,false]],"solution":[[8,1,9,2,4,3,5,6,7],[5,3,4,9,7,6,2,1,8],[2,7,6,1,8,5,9,3,4],[4,5,7,8,6,1,3,9,2],[1,6,2,7,3,9,8,4,5],[3,9,8,4,5,2,6,7,1],[9,4,5,6,2,7,1,8,3],[7,2,1,3,9,8,4,5,6],[6,8,3,5,1,4,7,2,9]]}